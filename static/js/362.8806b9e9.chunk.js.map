{"version":3,"file":"static/js/362.8806b9e9.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDescription.styled.jsx","components/MovieDetails/MovieDescription.jsx","pages/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n`;\n\nexport const MovieDetailsContent = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n`;\n\nexport const MovieImage = styled.div`\n  flex: 1;\n  margin-right: 20px;\n\n  img {\n    width: 100%;\n    border-radius: 5px;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  flex: 2;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 24px;\n  margin-bottom: 5px;\n`;\n\nexport const MovieYear = styled.span`\n  font-size: 18px;\n  color: #777777;\n`;\n\nexport const MovieReleaseDate = styled.p`\n  font-size: 16px;\n  color: #777777;\n  margin: 10px 0;\n`;\n\nexport const MovieGenres = styled.p`\n  font-size: 16px;\n  color: #777777;\n  margin: 5px 0;\n`;\n\nexport const Rating = styled.p`\n  font-size: 16px;\n  color: #777777;\n  margin-bottom: 10px;\n`;\n\nexport const OverviewHeading = styled.h2`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 16px;\n  color: #777777;\n`;\n\nexport const NavigationLinks = styled.ul`\n  display: flex;\n  list-style: none;\n  margin-bottom: 20px;\n`;\n\nexport const NavigationLinkItem = styled.li`\n  margin-right: 10px;\n\n  a {\n    text-decoration: none;\n    color: #555;\n    font-size: 16px;\n    transition: color 0.3s ease, font-weight 0.3s ease;\n\n    &:hover {\n      color: #333;\n      font-weight: bold;\n    }\n  }\n`;\n\nexport const GoBackLink = styled(Link)`\n  margin-right: auto;\n  text-decoration: none;\n  color: #555;\n  font-size: 16px;\n  font-weight: bold;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #333;\n    font-weight: bold;\n  }\n`;\n\nexport const BackIcon = styled(FiArrowLeft)`\n  margin-right: 5px;\n`;\n","import React, { useRef } from 'react';\nimport imgDefault from '../../imgDefault/noImageAvailable.jpg';\nimport {\n  BackIcon,\n  GoBackLink,\n  MovieDetailsContainer,\n  MovieDetailsContent,\n  MovieGenres,\n  MovieImage,\n  MovieInfo,\n  MovieReleaseDate,\n  MovieTitle,\n  MovieYear,\n  NavigationLinkItem,\n  NavigationLinks,\n  OverviewHeading,\n  OverviewText,\n  Rating,\n} from './MovieDescription.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function MovieDescription({ movie }) {\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n\n  if (!movie) {\n    return null;\n  }\n\n  const { releaseDate, img, genres, title, rating, overview } = movie;\n  const movieYear = releaseDate?.split('-')[0];\n  const imageUrl = img ? `https://image.tmdb.org/t/p/w500${img}` : imgDefault;\n  const releasDate = releaseDate?.split('-').join('/');\n  const movieGenres = genres\n    ?.map(genre => genre.name)\n    .join(', ')\n    .toLowerCase();\n\n  return (\n    <MovieDetailsContainer>\n      <GoBackLink to={backLocationRef.current}>\n        <BackIcon />\n        Go back\n      </GoBackLink>\n      <MovieDetailsContent>\n        <MovieImage>\n          <img src={imageUrl} alt=\"\" />\n        </MovieImage>\n        <MovieInfo>\n          <MovieTitle>\n            {title} <MovieYear>({movieYear})</MovieYear>\n          </MovieTitle>\n          <MovieReleaseDate>{releasDate}</MovieReleaseDate>\n          <MovieGenres>{movieGenres}</MovieGenres>\n          <Rating>Rating: {rating}</Rating>\n          <OverviewHeading>Overview</OverviewHeading>\n          <OverviewText>{overview}</OverviewText>\n        </MovieInfo>\n      </MovieDetailsContent>\n      <NavigationLinks>\n        <NavigationLinkItem>\n          <Link to=\"cast\">Cast</Link>\n        </NavigationLinkItem>\n        <NavigationLinkItem>\n          <Link to=\"reviews\">Reviews</Link>\n        </NavigationLinkItem>\n      </NavigationLinks>\n    </MovieDetailsContainer>\n  );\n}\n\n// genres\n// :\n// (3) [{…}, {…}, {…}]\n// img\n// :\n// \"/iuFNMS8U5cb6xfzi51Dbkovj7vM.jpg\"\n// overview\n// :\n// \"Barbie and Ken are having the time of their lives in the colorful and seemingly perfect world of Barbie Land. However, when they get a chance to go to the real world, they soon discover the joys and perils of living among humans.\"\n// rating\n// :\n// 7.634\n// releaseDate\n// :\n// \"2023-07-19\"\n// title\n// :\n// \"Barbie\"\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/movieAPI';\nimport MovieDescription from 'components/MovieDetails/MovieDescription';\nimport Loader from 'components/Loader/Loader';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const {\n          poster_path,\n          title,\n          release_date,\n          genres,\n          vote_average,\n          overview,\n        } = await getMovieDetails(movieId);\n        setMovie({\n          img: poster_path,\n          title,\n          releaseDate: release_date,\n          genres,\n          rating: vote_average,\n          overview,\n        });\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <MovieDescription movie={movie} />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjhiYWRjMjMwODgzZjkwODc3ZjA0YjkzMzg4YzE2MiIsInN1YiI6IjY0YzEzZDIyMmYxYmUwMDEyZDkxM2M2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.87kGy0m8LKwU7rLB9Fu-QG9F6jP_TM1w6fEawWTAL5U',\n  },\n};\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieByQuery({ query }) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${query}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.massage);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.massage);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.massage);\n  }\n}\n"],"names":["MovieDetailsContainer","styled","_templateObject","_taggedTemplateLiteral","MovieDetailsContent","_templateObject2","MovieImage","_templateObject3","MovieInfo","_templateObject4","MovieTitle","_templateObject5","MovieYear","_templateObject6","MovieReleaseDate","_templateObject7","MovieGenres","_templateObject8","Rating","_templateObject9","OverviewHeading","_templateObject10","OverviewText","_templateObject11","NavigationLinks","_templateObject12","NavigationLinkItem","_templateObject13","GoBackLink","Link","_templateObject14","BackIcon","FiArrowLeft","_templateObject15","MovieDescription","_ref","_location$state$from","_location$state","movie","location","useLocation","backLocationRef","useRef","state","from","releaseDate","img","genres","title","rating","overview","movieYear","split","imageUrl","concat","imgDefault","releasDate","join","movieGenres","map","genre","name","toLowerCase","_jsxs","children","to","current","_jsx","src","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","loading","setLoading","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovieDetail","poster_path","release_date","vote_average","wrap","_context","prev","next","getMovieDetails","sent","t0","console","log","finish","stop","apply","arguments","_Fragment","Loader","Suspense","fallback","Outlet","BASE_URL","options","headers","accept","Authorization","getTrendingMovies","_getTrendingMovies","response","axios","abrupt","data","Error","message","getMovieByQuery","_x","_getMovieByQuery","_callee2","query","_context2","_x2","_getMovieDetails","_callee3","id","_context3","massage","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}