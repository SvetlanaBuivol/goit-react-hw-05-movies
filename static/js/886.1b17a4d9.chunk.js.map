{"version":3,"file":"static/js/886.1b17a4d9.chunk.js","mappings":"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","sources":["components/Home/MoviesList.jsx","components/SearchInput/SearchInput.jsx","pages/Movies.jsx","services/movieAPI.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function MoviesList({ movies, state }) {\n  return (\n    <ul>\n      {movies &&\n        movies.map(({id, title}) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={state}>{title}</Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function SearchInput({ onSubmit }) {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const[searchQuery, setSearchQuery] = useState(()=>searchParams.get('query') ?? '')\n\n  const handleMovieChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      Notify.warning('Please enter a value', { position: 'center-center' });\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n    \n    onSubmit(searchQuery); \n     setSearchQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        onChange={handleMovieChange}\n        value={searchQuery}\n      />\n      <button type=\"submit\">\n        <span>Search</span>\n      </button>\n    </form>\n  );\n}\n","import { useEffect, useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport Loader from 'components/Loader/Loader';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport MoviesList from 'components/Home/MoviesList';\nimport { getMovieByQuery } from 'services/movieAPI';\nimport { MoviesContext } from 'Context/Context';\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const { movies, setMovies } = useContext(MoviesContext);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await getMovieByQuery({ query });\n\n        if (!results.length) {\n          Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.',\n            { position: 'center-center' }\n          );\n          return;\n        }\n        const moviesByQuery = results.map(({ title, id }) => ({\n          title,\n          id,\n        }));\n        setMovies(moviesByQuery);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [query, setMovies]);\n\n  const handleFormSubmit = querySearch => {\n    setQuery(querySearch);\n    setLoading(true);\n    setMovies(null);\n  };\n\n  return (\n    <>\n      <SearchInput onSubmit={handleFormSubmit} />\n      {loading && <Loader />}\n      {movies && <MoviesList state={{ from: location }} movies={movies} />}\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjhiYWRjMjMwODgzZjkwODc3ZjA0YjkzMzg4YzE2MiIsInN1YiI6IjY0YzEzZDIyMmYxYmUwMDEyZDkxM2M2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.87kGy0m8LKwU7rLB9Fu-QG9F6jP_TM1w6fEawWTAL5U',\n  },\n};\n\nexport async function getTrendingMovies() {\n    try {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieByQuery({ query }) {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie?query=${query}`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/credits`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}"],"names":["MoviesList","movies","state","map","id","title","to","SearchInput","onSubmit","useSearchParams","searchParams","setSearchParams","useState","get","searchQuery","setSearchQuery","event","preventDefault","trim","query","Notify","position","type","autoComplete","autoFocus","placeholder","onChange","target","value","setQuery","useContext","MoviesContext","setMovies","loading","setLoading","location","useLocation","useEffect","fetchData","getMovieByQuery","results","length","moviesByQuery","console","log","querySearch","Loader","from","BASE_URL","options","headers","accept","Authorization","getTrendingMovies","axios","response","data","Error","message","getMovieDetails","massage","getMovieCredits","getMovieReviews"],"sourceRoot":""}