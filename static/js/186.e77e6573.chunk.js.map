{"version":3,"file":"static/js/186.e77e6573.chunk.js","mappings":"wQAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+FAChBF,GAAW,GADK,mBAIYG,EAAAA,EAAAA,IAAgBT,GAJ5B,oBAINU,EAJM,EAINA,SACKC,OALC,iDASRC,EAAaF,EAAQG,KAAI,kBAA8B,CAC3DC,OAD6B,EAAGA,OAEhCC,QAF6B,EAAWA,QAGxCC,GAH6B,EAAoBA,GAApB,IAK/BZ,EAAWQ,GAdG,kDAgBdK,QAAQC,IAAR,MAhBc,yBAkBdZ,GAAW,GAlBG,6EAAH,qDAqBfE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAW,SAAC,IAAD,KACZ,wBACGF,EAAQQ,OACPR,EAAQU,KAAI,gBAAGG,EAAH,EAAGA,GAAIF,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGC,EADC,KAOZ,wBAAI,iDAKb,C,+LClDKG,EAAW,gCAEXC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,sBAA2CC,GAF/D,cAEGM,EAFH,yBAGIA,EAASC,MAHb,sCAKG,IAAIC,MAAM,KAAMC,SALnB,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,8FAAiCC,EAAjC,EAAiCA,MAAjC,kBAEoBN,EAAAA,EAAAA,IAAA,UAAaN,EAAb,8BAA2CY,GAASX,GAFxE,cAEGM,EAFH,yBAGIA,EAASC,MAHb,sCAKG,IAAIC,MAAM,KAAMC,SALnB,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhB,GAA/B,gGAEwBS,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAA8BH,GAAMI,GAF5D,cAEOM,EAFP,yBAGQA,EAASC,MAHjB,sCAKO,IAAIC,MAAM,KAAMK,SALvB,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlB,GAA/B,gGAEwBS,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAA8BH,EAA9B,YAA4CI,GAFpE,cAEOM,EAFP,yBAGQA,EAASC,MAHjB,sCAKO,IAAIC,MAAM,KAAMK,SALvB,gFASA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BO,GAA/B,gGAEwBS,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAA8BH,EAA9B,YAA4CI,GAFpE,cAEOM,EAFP,yBAGQA,EAASC,MAHjB,sCAKO,IAAIC,MAAM,KAAMK,SALvB,gF","sources":["components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movieAPI';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await getMovieReviews(movieId);\n        if (!results.length) {\n          return;\n        }\n\n        const reviewsArr = results.map(({ author, content, id }) => ({\n          author,\n          content,\n          id,\n        }));\n        setReviews(reviewsArr);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {reviews.length ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <h3>We don't have any reviews for this movie</h3>\n        )}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjhiYWRjMjMwODgzZjkwODc3ZjA0YjkzMzg4YzE2MiIsInN1YiI6IjY0YzEzZDIyMmYxYmUwMDEyZDkxM2M2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.87kGy0m8LKwU7rLB9Fu-QG9F6jP_TM1w6fEawWTAL5U',\n  },\n};\n\nexport async function getTrendingMovies() {\n    try {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieByQuery({ query }) {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie?query=${query}`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/credits`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchData","getMovieReviews","results","length","reviewsArr","map","author","content","id","console","log","BASE_URL","options","headers","accept","Authorization","getTrendingMovies","axios","response","data","Error","message","getMovieByQuery","query","getMovieDetails","massage","getMovieCredits"],"sourceRoot":""}