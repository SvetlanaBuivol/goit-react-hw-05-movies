{"version":3,"file":"static/js/46.8cd05082.chunk.js","mappings":"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","sources":["components/Home/Home.styled.jsx","components/Home/Home.jsx","components/SearchInput/SearchInput.styled.jsx","components/SearchInput/SearchInput.jsx","pages/Movies.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport imgDefault from '../../imgDefault/qwe.jpg';\n\nexport const MoviesListContainer = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  position: relative;\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  color: #fff;\n  font-size: 24px;\n  text-decoration: none;\n  background-image: url(${imgDefault});\n  background-size: cover;\n  background-position: center;\n  backdrop-filter: blur 5px;\n  transition: background-blur 0.3s ease;\n\n  &:hover {\n    backdrop-filter: blur 10px;\n  }\n`;\n","import React from 'react';\nimport { MoviesListContainer, MovieLink, MovieItem } from './Home.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <MoviesListContainer>\n      {movies &&\n        movies.map(({ id, title }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{from: location}}>\n              {title}\n            </MovieLink>\n          </MovieItem>\n        ))}\n    </MoviesListContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  margin-bottom: 24px;\n`;\n\nexport const SearchInputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 15px;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 25px;\n  outline: none;\n  width: 300px;\n  transition: border-color 0.3s ease-in-out;\n\n  &:hover {\n    border-color: #555;\n\n    &:focus {\n      border-color: #555;\n      box-shadow: 0 0 5px rgba(193, 189, 185, 0.368);\n    }\n  }\n`;\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #555;\n  }\n`;\n\nexport const SearchIcon = styled.span`\n  margin-left: 5px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport { RiSearchLine } from 'react-icons/ri';\nimport {\n  Form,\n  Input,\n  SearchButton,\n  SearchInputWrapper,\n} from './SearchInput.styled';\n\nexport default function SearchInput({ onSubmit }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    () => searchParams.get('query') ?? ''\n  );\n\n  const handleMovieChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      Notify.warning('Please enter a value', { position: 'center-center' });\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <SearchInputWrapper>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          onChange={handleMovieChange}\n          value={searchQuery}\n        />\n        <SearchButton type=\"submit\">\n          <RiSearchLine />\n          <span>Search</span>\n        </SearchButton>\n      </SearchInputWrapper>\n    </Form>\n  );\n}\n","import { useEffect, useState, useContext } from 'react';\nimport { Notify } from 'notiflix';\nimport Loader from 'components/Loader/Loader';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport MoviesList from 'components/Home/Home';\nimport { getMovieByQuery } from 'services/movieAPI';\nimport { MoviesContext } from 'Context/Context';\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const { movies, setMovies } = useContext(MoviesContext);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await getMovieByQuery({ query });\n\n        if (!results.length) {\n          Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.',\n            { position: 'center-center' }\n          );\n          return;\n        }\n        const moviesByQuery = results.map(({ title, id }) => ({\n          title,\n          id,\n        }));\n        setMovies(moviesByQuery);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [query, setMovies]);\n\n  const handleFormSubmit = querySearch => {\n    setQuery(querySearch);\n    setLoading(true);\n    setMovies(null);\n  };\n\n  return (\n    <>\n      <SearchInput onSubmit={handleFormSubmit} />\n      {loading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjhiYWRjMjMwODgzZjkwODc3ZjA0YjkzMzg4YzE2MiIsInN1YiI6IjY0YzEzZDIyMmYxYmUwMDEyZDkxM2M2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.87kGy0m8LKwU7rLB9Fu-QG9F6jP_TM1w6fEawWTAL5U',\n  },\n};\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieByQuery({ query }) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${query}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.massage);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${id}/credits`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.massage);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.massage);\n  }\n}\n"],"names":["MoviesListContainer","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","to","concat","state","from","Form","SearchInputWrapper","Input","SearchButton","_templateObject4","_templateObject5","SearchInput","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_searchParams$get","get","_useState2","searchQuery","setSearchQuery","event","preventDefault","trim","query","Notify","position","_jsxs","type","autoComplete","autoFocus","placeholder","onChange","target","value","RiSearchLine","setQuery","_useContext","useContext","MoviesContext","setMovies","_useState3","_useState4","loading","setLoading","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovieByQuer","results","moviesByQuery","wrap","_context","prev","next","getMovieByQuery","sent","length","abrupt","t0","console","log","finish","stop","apply","arguments","_Fragment","querySearch","Loader","BASE_URL","options","headers","accept","Authorization","getTrendingMovies","_getTrendingMovies","response","axios","data","Error","message","_x","_getMovieByQuery","_callee2","_context2","getMovieDetails","_x2","_getMovieDetails","_callee3","_context3","massage","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}