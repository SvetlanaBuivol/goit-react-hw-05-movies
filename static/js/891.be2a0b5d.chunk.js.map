{"version":3,"file":"static/js/891.be2a0b5d.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDescription.jsx","pages/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["import React from 'react';\nimport imgDefault from '../../imgDefault/noImageAvailable.jpg';\n\nexport default function MovieDescription({ movie }) {\n  if (!movie) {\n    return null;\n  }\n  const { releaseDate, img, genres, title, rating, overview } = movie;\n  const movieYear = releaseDate?.split('-')[0];\n  const imageUrl = img ? `https://image.tmdb.org/t/p/w500${img}` : imgDefault;\n  const releasDate = releaseDate?.split('-').join('/');\n  const movieGenres = genres\n    ?.map(genre => genre.name)\n    .join(', ')\n    .toLowerCase();\n\n  return (\n    <div>\n      <img src={imageUrl} alt=\"\" />\n      <h1>\n        {title} ({movieYear})\n      </h1>\n      <p>{releasDate}</p>\n      <p>{movieGenres}</p>\n      <p>Rating: {rating}</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n    </div>\n  );\n}\n\n// genres\n// :\n// (3) [{…}, {…}, {…}]\n// img\n// :\n// \"/iuFNMS8U5cb6xfzi51Dbkovj7vM.jpg\"\n// overview\n// :\n// \"Barbie and Ken are having the time of their lives in the colorful and seemingly perfect world of Barbie Land. However, when they get a chance to go to the real world, they soon discover the joys and perils of living among humans.\"\n// rating\n// :\n// 7.634\n// releaseDate\n// :\n// \"2023-07-19\"\n// title\n// :\n// \"Barbie\"\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/movieAPI';\nimport MovieDescription from 'components/MovieDetails/MovieDescription';\nimport Loader from 'components/Loader/Loader';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n    setLoading(true);\n\n      try {\n        const { poster_path, title, release_date, genres, vote_average, overview } = await getMovieDetails(movieId);\n        setMovie({\n          img: poster_path,\n          title,\n          releaseDate: release_date,\n          genres,\n          rating: vote_average,\n          overview,\n        });\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Link to={backLocationRef.current}>Go back</Link>\n      <MovieDescription movie={movie} />\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader/>}>\n        <Outlet />\n        </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjhiYWRjMjMwODgzZjkwODc3ZjA0YjkzMzg4YzE2MiIsInN1YiI6IjY0YzEzZDIyMmYxYmUwMDEyZDkxM2M2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.87kGy0m8LKwU7rLB9Fu-QG9F6jP_TM1w6fEawWTAL5U',\n  },\n};\n\nexport async function getTrendingMovies() {\n    try {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieByQuery({ query }) {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie?query=${query}`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/credits`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}"],"names":["MovieDescription","movie","releaseDate","img","genres","title","rating","overview","movieYear","split","imageUrl","imgDefault","releasDate","join","movieGenres","map","genre","name","toLowerCase","src","alt","movieId","useParams","useState","setMovie","loading","setLoading","location","useLocation","backLocationRef","useRef","state","from","useEffect","fetchData","getMovieDetails","poster_path","release_date","vote_average","console","log","Loader","to","current","Suspense","fallback","BASE_URL","options","headers","accept","Authorization","getTrendingMovies","axios","response","data","Error","message","getMovieByQuery","query","id","massage","getMovieCredits","getMovieReviews"],"sourceRoot":""}