{"version":3,"file":"static/js/886.3f147847.chunk.js","mappings":"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","sources":["components/Home/MoviesList.jsx","components/SearchInput/SearchInput.jsx","pages/Movies.jsx","services/movieAPI.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function MoviesList({ movies, state }) {\n  return (\n    <ul>\n      {movies &&\n        movies.map(({id, title}) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={state}>{title}</Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import { Notify } from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function SearchInput({ onSubmit }) {\n  const [searchParams, setSearchParams] = useSearchParams()\n  let searchQuery = searchParams.get('query') ?? '';\n\n  const handleMovieChange = event => {\n    if (event.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({query: event.target.value})\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      Notify.warning('Please enter a value', { position: 'center-center' });\n      return;\n    }\n    onSubmit(searchQuery); \n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        onChange={handleMovieChange}\n        value={searchQuery}\n      />\n      <button type=\"submit\">\n        <span>Search</span>\n      </button>\n    </form>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix';\nimport Loader from 'components/Loader/Loader';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport MoviesList from 'components/Home/MoviesList';\nimport { getMovieByQuery } from 'services/movieAPI';\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await getMovieByQuery({ query });\n        console.log(results);\n\n        if (!results.length) {\n          Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.',\n            { position: 'center-center' }\n          );\n          return;\n        }\n        const moviesByQuery = results.map(({ title, id }) => ({\n          title,\n          id,\n        }));\n        setMovies(moviesByQuery);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  const handleFormSubmit = querySearch => {\n    setQuery(querySearch);\n    setLoading(true);\n    setMovies(null);\n  };\n\n  return (\n    <>\n      <SearchInput onSubmit={handleFormSubmit} />\n      {loading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjhiYWRjMjMwODgzZjkwODc3ZjA0YjkzMzg4YzE2MiIsInN1YiI6IjY0YzEzZDIyMmYxYmUwMDEyZDkxM2M2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.87kGy0m8LKwU7rLB9Fu-QG9F6jP_TM1w6fEawWTAL5U',\n  },\n};\n\nexport async function getTrendingMovies() {\n    try {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieByQuery({ query }) {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie?query=${query}`, options);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/credits`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}\n\nexport async function getMovieReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, options)\n        return response.data;\n    } catch (error) {\n        throw new Error(error.massage);\n    }\n}"],"names":["MoviesList","movies","state","map","id","title","to","SearchInput","onSubmit","useSearchParams","searchParams","setSearchParams","searchQuery","get","event","preventDefault","trim","Notify","position","type","autoComplete","autoFocus","placeholder","onChange","target","value","query","useState","setQuery","setMovies","loading","setLoading","useEffect","fetchData","getMovieByQuery","results","console","log","length","moviesByQuery","querySearch","Loader","BASE_URL","options","headers","accept","Authorization","getTrendingMovies","axios","response","data","Error","message","getMovieDetails","massage","getMovieCredits","getMovieReviews"],"sourceRoot":""}